// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProvaPub.Infrastructure.Repository;

#nullable disable

namespace ProvaPub.Infrastructure.Migrations
{
    [DbContext(typeof(TestDbContext))]
    partial class TestDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProvaPub.Domain.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Dustin Ruecker"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Lisa Koss"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Albert Moen"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Blake Lemke"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Christine Kshlerin"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Dorothy Lang"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Justin Hegmann"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Sheldon Hoppe"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Thomas Tremblay"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Kristen Graham"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Laurence Corwin"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Donna Yundt"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Dixie Kautzer"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Sheri Zulauf"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Darlene Schaden"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Erma Fritsch"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Amber Leuschke"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Josh Abshire"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Edmond Walsh"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Cynthia Halvorson"
                        });
                });

            modelBuilder.Entity("ProvaPub.Domain.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ProvaPub.Domain.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Tasty Steel Bike"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Gorgeous Metal Chicken"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Incredible Soft Chips"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Small Metal Soap"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Refined Plastic Ball"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Practical Plastic Table"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Sleek Granite Shoes"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Sleek Steel Pants"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Unbranded Rubber Tuna"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Tasty Plastic Ball"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Sleek Fresh Chicken"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Unbranded Wooden Gloves"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Refined Wooden Gloves"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Handmade Cotton Table"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Fantastic Steel Cheese"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Rustic Steel Mouse"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Rustic Metal Gloves"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Handcrafted Frozen Chips"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Licensed Cotton Shoes"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Small Granite Car"
                        });
                });

            modelBuilder.Entity("ProvaPub.Domain.Models.RandomNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("Numbers");
                });

            modelBuilder.Entity("ProvaPub.Domain.Models.Order", b =>
                {
                    b.HasOne("ProvaPub.Domain.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ProvaPub.Domain.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
